{"version":3,"sources":["redux/modules/weather.js","components/Form/index.js","components/Weather/index.js","App.js","reportWebVitals.js","redux/modules/index.js","redux/store.js","index.js"],"names":["moduleName","GET_WEATHER","CITY_WEATHER","COUNTRY_WEATHER","START_WEATHER","defaultState","weather","city","country","start","getStart","payload","type","Form","props","dispatch","useDispatch","useSelector","state","handlerSubmit","event","a","preventDefault","query","axios","get","resp","onSubmit","data","htmlFor","placeholder","id","onChange","target","value","required","WeatherCity","style","display","img","list","icon","str","day","date","Date","getTime","sunrise","toLocaleTimeString","slice","sunset","className","src","alt","width","height","name","main","Math","floor","temp","temp_min","temp_max","wind","speed","connect","useState","userObject","setUserObject","user","Weather","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","redusers","preLoadedState","middlewares","createStore","combineReducers","rootRedusers","compose","applyMiddleware","thunk","reduxLogger","window","__REDUX_DEVTOOLS_EXTENSION__","store","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f67ec10b.chunk.js","sourcesContent":["\r\nconst moduleName = 'weather';\r\n\r\nconst GET_WEATHER = `${moduleName}/GET_WEATHER`;\r\nconst CITY_WEATHER = `${moduleName}/CITY_WEATHER`;\r\nconst COUNTRY_WEATHER = `${moduleName}/COUNTRY_WEATHER`;\r\nconst START_WEATHER = `${moduleName}/START_WEATHER`;\r\n\r\nconst defaultState = {\r\n    weather: [],\r\n    city: \"uzhgorod\",\r\n    country: \"ua\",\r\n    start: false\r\n};\r\n\r\nexport default (state = defaultState, {type, payload}) => {\r\n    switch (type) {\r\n        case GET_WEATHER:\r\n            return { ...state, weather: payload}\r\n\r\n        case CITY_WEATHER:\r\n            state.city = payload\r\n            return { ...state, city: state.city}\r\n\r\n        case COUNTRY_WEATHER:\r\n            state.country = payload\r\n            return { ...state, country: state.country}\r\n\r\n        case START_WEATHER:\r\n            state.start = payload\r\n            return { ...state, start: state.start}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const getStart = (payload) => ({type: START_WEATHER, payload});\r\nexport const getCityAction = (payload) => ({type: CITY_WEATHER, payload});\r\nexport const getCountryAction = (payload) => ({type: COUNTRY_WEATHER, payload});\r\nexport const getWeather = (payload) => ({type: GET_WEATHER, payload});\r\n\r\n// export const getWeather = () => async (dispatch) => {\r\n//     // dispatch({type: GET_POSTS, payload: [{id: 1, title: 'asd'}]});\r\n//     try{\r\n//        await \r\n//        fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${defaultState.city},ua&units=metric&appid=85ab88ec9852a2b74fd828b43a8afbb3`)\r\n//             .then((response) => response.json())\r\n//             .then((data) => dispatch({type: GET_WEATHER, payload: data}))\r\n//     } catch (error) {\r\n//         console.log(error)\r\n//     }\r\n    \r\n// }","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCityAction, getCountryAction, getStart, getWeather } from '../.././redux/modules/weather';\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction Form(props){\r\n  const dispatch = useDispatch();\r\n  const city = useSelector(state => state.weather.city);\r\n  const country = useSelector(state => state.weather.country);\r\n\r\n  const handlerSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const query = `https://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&units=metric&appid=85ab88ec9852a2b74fd828b43a8afbb3`;\r\n    let resp = await axios.get(query);\r\n    props.onSubmit(resp.data);\r\n    dispatch(getWeather(resp.data));\r\n    dispatch(getStart(true)); \r\n  };\r\n    \r\nconst handleChangeCity = (event) => {\r\n    dispatch(getCityAction(event.target.value));\r\n}\r\n\r\nconst handleChangeCountry = (event) => {\r\n    dispatch(getCountryAction(event.target.value));\r\n}\r\n\r\n    return (\r\n       <form onSubmit={handlerSubmit}>\r\n            <label htmlFor=\"country\">Country: \"ua\",\"de\",\"by\",\"ru\",\"hu\", \"it\"</label>\r\n            <input type=\"text\" placeholder=\"country\"  id=\"country\"  onChange={handleChangeCountry} required/>\r\n            <label htmlFor=\"city\">City:</label>\r\n            <input type=\"text\" placeholder=\"city\" id=\"city\" onChange={handleChangeCity} required/>\r\n            <button type=\"submit\">Search</button>\r\n        </form>\r\n   );\r\n} \r\n\r\nexport default Form\r\n","import {useSelector} from 'react-redux';\r\n\r\nfunction WeatherCity(props){\r\n   const start = useSelector(state => state.weather.start);\r\n   if (typeof props.city === \"undefined\") return <h2 style={{display: start ? \"block\" : \"none\"}}>No user information</h2>;\r\n   const img = `http://openweathermap.org/img/wn/${props.list[0].weather[0].icon}@2x.png`;\r\n\r\n   let str = '';\r\n   let day = ''\r\n   const date = new Date().getTime();\r\n   const sunrise = new Date(props.city.sunrise * 1000).toLocaleTimeString().slice(0,5);\r\n   const sunset = new Date(props.city.sunset * 1000).toLocaleTimeString().slice(0,5);\r\n\r\n    if (props.city.sunrise * 1000 > date && props.city.sunrise * sunset < date) {\r\n        str = 'https://i.pinimg.com/736x/6a/26/e6/6a26e6cca95d7f4233c6269ff8ccdf76.jpg';\r\n        day = \"Day\";\r\n    } else  {\r\n        str = 'https://thumbs.dreamstime.com/b/%D1%87%D0%B5%D1%80%D0%BD%D1%8B%D0%B9-%D0%BB%D0%BE%D0%B3%D0%BE%D1%82%D0%B8%D0%BF-%D0%BD%D0%BE%D1%87%D0%B8-%D0%BB%D1%83%D0%BD%D1%8B-%D0%B2%D0%B5%D0%BA%D1%82%D0%BE%D1%80-eps-%D0%B7%D0%BD%D0%B0%D0%BA%D0%B0-%D0%B8%D0%B7%D0%BE%D0%BB%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%BD%D1%8B%D0%B9-%D1%81%D0%B8%D0%BB%D1%83%D1%8D%D1%82-%D0%BD%D0%B0-%D0%B1%D0%B5%D0%BB%D0%BE%D0%B9-143907982.jpg';\r\n        day = \"Night\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\" >\r\n            <div className=\"icons item\">\r\n                <h4>{day} </h4>\r\n                <img src={str} alt=\"\" width=\"160px\" height=\"160px\"></img>\r\n                <p>Sunrise: {sunrise} </p>\r\n                <p>Sunset: {sunset} </p>\r\n            </div>\r\n            <div className=\"weatherCity item\">\r\n                <h3>Ð¡ountry: {props.city.country}</h3>\r\n                <h3>City: {props.city.name}</h3>\r\n                <img src={img} alt=\"\" width=\"180px\" height=\"180px\"></img>\r\n                <h3>{props.list[0].weather[0].main}</h3>\r\n            </div>\r\n            <div className=\"temp item\">\r\n                <h1>{Math.floor(props.list[0].main.temp)} C</h1>\r\n                <p>Min temp: {Math.floor(props.list[0].main.temp_min)} C</p>\r\n                <p>Max temp: {Math.floor(props.list[0].main.temp_max)} C</p>\r\n                <p>Wind speed: {Math.floor(props.list[0].wind.speed)} Ð¼/Ñ</p>\r\n            </div>\r\n        </div>\r\n   );\r\n} \r\n\r\nexport default WeatherCity","import React, { useState } from 'react';\nimport './App.css';\nimport { connect, useSelector } from 'react-redux';\nimport Form from './components/Form';\nimport WeatherCity from './components/Weather';\n\n\n// {weather, getWeather, city, country}\nfunction App() {\n  \n  const [userObject, setUserObject] = useState({});\n  const updateUser = (user) => {\n    setUserObject(user);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Weather</h1>\n      <Form onSubmit={updateUser}/>\n      <WeatherCity {...userObject} />\n    </div>\n  );\n}\n\nexport default connect(\n({weather}) => ({weather: weather.weather, city: weather.city, country: weather.country}),\n\n)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import weather from './weather'\r\n\r\nexport default {\r\n    weather\r\n};","import { createStore, applyMiddleware, combineReducers, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reduxLogger from 'redux-logger';\r\nimport rootRedusers from './modules';\r\n\r\nconst configureStore = (redusers = {}, preLoadedState = {}, middlewares = [] ) => createStore(\r\n    combineReducers({\r\n        ...rootRedusers,\r\n        ...redusers\r\n    }),\r\n    preLoadedState,\r\n    compose(\r\n        applyMiddleware(\r\n            ...middlewares,\r\n            thunk,\r\n            reduxLogger\r\n        ),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n)\r\n\r\nexport default configureStore","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport configureStore from './redux/store'\nimport { Provider } from 'react-redux';\nimport 'antd/dist/antd.css';\n\nconst store = configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>\n ,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}